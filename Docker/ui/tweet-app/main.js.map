{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/pipes/date-ago.pipe.ts","./src/environments/environment.ts","./src/app/reset/reset-pass/reset-pass.component.ts","./src/app/reset/reset-pass/reset-pass.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user-list/user-list.component.html","./src/app/user-list/user-list.component.ts","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/tweet.service.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/tweet-list/tweet-list.component.ts","./src/app/tweet-list/tweet-list.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { User } from '../interfaces/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted: boolean = false;\r\n  loading: boolean = false;\r\n  isEmailUnique: boolean = true;\r\n  isUsernameUnique: boolean = true;\r\n  success: boolean = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', [Validators.required,Validators.pattern('[A-ZA-z]{1,}')]],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required,Validators.minLength(6)]],\r\n      email: ['', [Validators.required,Validators.email]],\r\n      contactNumber: [\r\n        '',\r\n        [Validators.required, Validators.pattern('[7-9]{1}[0-9]{9}')],\r\n      ],\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n  ngOnInit(): void {}\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    let user: User = {\r\n      id: null,\r\n      username: this.f.username.value,\r\n      password: this.f.password.value,\r\n      email: this.f.email.value,\r\n      firstName: this.f.firstName.value,\r\n      lastName: this.f.lastName.value,\r\n      contactNumber: this.f.contactNumber.value,\r\n    };\r\n    this.loading = true;\r\n    this.authService.register(user).subscribe(\r\n      (response: any) => {\r\n        this.loading = false;\r\n        if (response.username !== undefined) {\r\n          this.success = true;\r\n        }\r\n      },\r\n      (err) => {\r\n        this.loading = false;\r\n        if (\r\n          err.message.includes('duplicate key') &&\r\n          err.message.includes('username')\r\n        ) {\r\n          this.isUsernameUnique = false;\r\n        }\r\n        if (\r\n          err.message.includes('duplicate key') &&\r\n          err.message.includes('email')\r\n        ) {\r\n          this.isEmailUnique = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"col-md-4 offset-md-4 mt-5\">\r\n  <div class=\"card\">\r\n    <h4 class=\"card-header\">Register</h4>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"firstName\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.firstName.errors.required\">\r\n              First Name is required\r\n            </div>\r\n            <div *ngIf=\"f.firstName.errors.pattern\">\r\n              Name only accpect Alphabetic charactor.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"lastName\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"username\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n          />\r\n          <div\r\n            *ngIf=\"submitted && (f.username.errors || !isUsernameUnique)\"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n            <div *ngIf=\"!isUsernameUnique\">Username already exists</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"password\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"f.password.errors?.minlength\">Minium Password length is 6</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"email\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\r\n          />\r\n          <div\r\n            *ngIf=\"submitted && (f.email.errors || !isEmailUnique)\"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"!isEmailUnique\">Email already exists</div>\r\n            <div *ngIf=\"f.email.errors.email\">Please enter valide Email</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"contact-number\">Contact Number</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"contactNumber\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.contactNumber.errors }\"\r\n          />\r\n          <div\r\n            *ngIf=\"submitted && f.contactNumber.errors\"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            <div *ngIf=\"f.contactNumber.errors.required\">\r\n              Contact Number is required\r\n            </div>\r\n            \r\n            <div *ngIf=\"f.contactNumber.errors.pattern\">\r\n              Contact Number can only be a 10 digit number\r\n              and startwith 7,8,9\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"success\" class=\"text-success mb-3\">\r\n          Registered successfully!\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span\r\n              *ngIf=\"loading\"\r\n              class=\"spinner-border spinner-border-sm mr-1\"\r\n            ></span>\r\n            Register\r\n          </button>\r\n          <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dateAgo',\r\n  pure: true,\r\n})\r\nexport class DateAgoPipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    if (value) {\r\n      const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\r\n      if (seconds < 29)\r\n        // less than 30 seconds ago will show as 'Just now'\r\n        return 'Just now';\r\n      const intervals = {\r\n        year: 31536000,\r\n        month: 2592000,\r\n        week: 604800,\r\n        day: 86400,\r\n        hour: 3600,\r\n        minute: 60,\r\n        second: 1,\r\n      };\r\n      let counter;\r\n      for (const i in intervals) {\r\n        counter = Math.floor(seconds / intervals[i]);\r\n        if (counter > 0)\r\n          if (counter === 1) {\r\n            return counter + ' ' + i + ' ago'; // singular (1 day ago)\r\n          } else {\r\n            return counter + ' ' + i + 's ago'; // plural (2 days ago)\r\n          }\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  ApiUrl: \"http://localhost:8090/api/v1.0/tweets\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\nimport { User } from 'src/app/interfaces/user';\n@Component({\n  selector: 'app-reset-pass',\n  templateUrl: './reset-pass.component.html',\n  styleUrls: ['./reset-pass.component.css']\n})\nexport class ResetPassComponent implements OnInit {\n  resetSubmitted: boolean;\n  loading: boolean;\n\n  constructor( private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router) { }\n  resetPasswordForm: FormGroup;\n  submitted: boolean = false;\n  resetPasswordValue: string;\n  currentUser: User;\n  invalid = false;\n  passwordResetComplete: boolean = false;\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    this.resetPasswordForm = this.formBuilder.group({\n      password: ['', [Validators.required,Validators.minLength(6)]],\n    });\n  }\n  get f() {\n    return this.resetPasswordForm.controls;\n  }\n  getPassword() {\n    return this.resetPasswordForm.get('password').value;\n  }\n  onSubmit() {\n    console.log('Submitted');\n    this.submitted = true;\n    if (this.resetPasswordForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.authService\n      .resetPassword( this.currentUser.username,this.getPassword())\n        .subscribe((data: any) => {\n          this.loading=false;\n          if (\n            (data.resetStatus !== undefined || data.resetStatus !== null) &&\n            data.resetStatus == 'success'\n          ) {\n            \n           if (confirm(\"Password reset done please login again\")){\n              this.authService.setCurrentUser(null);\n            }\n            this.authService.setCurrentUser(null);\n            this.router.navigate([''])\n          }\n          this.passwordResetComplete = true;\n        });\n  }\n}\n","<div class=\"col-md-4 offset-md-4 mt-5\">\n    <div class=\"card\">\n      <h4 class=\"card-header\">Password Reset</h4>\n      <div class=\"card-body\">\n        <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              formControlName=\"password\"\n              class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n            />\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\n              <div *ngIf=\"f.password.errors?.minlength\">Minium Password length is 6</div>\n            </div>\n          </div>\n          <div *ngIf=\"invalid\" class=\"mb-3 text-danger\">User does not exist!</div>\n          <div class=\"form-group\">\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\n              <span\n                *ngIf=\"loading\"\n                class=\"spinner-border spinner-border-sm mr-1\"\n              ></span>\n              Reset\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'tweet-app-frontend';\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card mt-3\" style=\"width: 18rem\">\r\n        <img\r\n          class=\"card-img-top\"\r\n          src=\"/assets/profile_pic.png\"\r\n          alt=\"Card image cap \"\r\n        />\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">@{{ currentUser.username }}</h5>\r\n          <p class=\"card-text\">\r\n            Welcome, {{ currentUser.firstName }} {{ currentUser.lastName }},\r\n            what do you want to do?\r\n          </p>\r\n        </div>\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li class=\"list-group-item\">\r\n            Contact Number: +91 {{ currentUser.contactNumber }}\r\n          </li>\r\n          <li class=\"list-group-item\">Email Id: {{ currentUser.email }}</li>\r\n        </ul>\r\n\r\n        <div class=\"card-body\">\r\n          <a [routerLink]=\"['/passwordReset', currentUser.username]\" class=\"card-link\">Reset Password</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-9\">\r\n      <div class=\"row row-col-4 g-4\">\r\n        <div *ngFor=\"let user of userList\">\r\n          <div class=\"card ml-5 col mt-3\" style=\"width: 18rem\">\r\n            <img src=\"/assets/profile_pic.png\"  [ngClass]=\"user.username == currentUser.username ?'card-img-top':'card-img-top grayscale'\" alt=\"...\" />\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">\r\n                <a\r\n                  class=\"link-primary\"\r\n                  [routerLink]=\"['/tweets', user.username]\"\r\n                  >@{{ user.username }}</a\r\n                >\r\n              </h5>\r\n              <div class=\"card-text\">\r\n                <ul>\r\n                  <li>{{ user.email }}</li>\r\n                  <li>{{ user.contactNumber }}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  Form,\r\n} from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { User } from '../interfaces/user';\r\nimport { Tweet } from '../interfaces/tweet';\r\nimport { Router } from '@angular/router';\r\nimport { TweetService } from '../tweet.service';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css'],\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private tweetService: TweetService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (!this.authService.isLoggedIn()) {\r\n      this.router.navigateByUrl('login');\r\n    }\r\n    this.currentUser = this.authService.getCurrentUser();\r\n    this.tweetService\r\n      .getAllUsers()\r\n      .subscribe((data: any) => (this.userList = data));\r\n  }\r\n\r\n  currentUser: User;\r\n  userList: User[];\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { TweetListComponent } from './tweet-list/tweet-list.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DateAgoPipe } from './pipes/date-ago.pipe';\r\nimport { UserListComponent } from './user-list/user-list.component';\nimport { ResetPassComponent } from './reset/reset-pass/reset-pass.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    TweetListComponent,\r\n    DateAgoPipe,\r\n    UserListComponent,\r\n    ResetPassComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from './interfaces/user';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { environment } from '../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  currentUser: User;\r\n\r\n  forgotPassword(username: string) {\r\n    return this.http.get(environment.ApiUrl + `/${username}/forgot`);\r\n  }\r\n  resetPassword(username: string, password: string){\r\n    return this.http.post(environment.ApiUrl + '/reset', {\r\n      username,\r\n      password,\r\n    });\r\n  }\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('currentUser'));\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    if (user == null) {\r\n      localStorage.removeItem('currentUser');\r\n      return;\r\n    }\r\n    localStorage.setItem('currentUser', JSON.stringify(user));\r\n  }\r\n\r\n  isLoggedIn() {\r\n    if (localStorage.getItem('currentUser') != null) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  login(username: string, password: string) {\r\n    return this.http.post(environment.ApiUrl + '/login', {\r\n      username,\r\n      password,\r\n    });\r\n  }\r\n\r\n  register(user: User) {\r\n    return this.http.post(environment.ApiUrl + '/register', user);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from './interfaces/user';\r\nimport { Tweet } from './interfaces/tweet';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TweetService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllUsers() {\r\n    return this.http.get(environment.ApiUrl + '/users/all');\r\n  }\r\n\r\n  getUsersByUsername(username: string) {\r\n    return this.http.get(environment.ApiUrl + `/user/search/${username}`);\r\n  }\r\n\r\n  getAllTweetsByUsername(username: string) {\r\n    return this.http.get(environment.ApiUrl + `/${username}`);\r\n  }\r\n\r\n  getAllTweets() {\r\n    return this.http.get(environment.ApiUrl + '/all');\r\n  }\r\n\r\n  postTweet(tweet: Tweet, username: string) {\r\n    return this.http.post(environment.ApiUrl + `/${username}/add`, tweet);\r\n  }\r\n\r\n  likeTweet(tweetId: string, username: string) {\r\n    return this.http.put(\r\n      environment.ApiUrl + `/${username}/like/${tweetId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  deleteTweet(tweetId: string, username: string) {\r\n    return this.http.delete(\r\n      environment.ApiUrl + `/${username}/delete/${tweetId}`\r\n    );\r\n  }\r\n\r\n  updateTweet(tweet: Tweet, username: string) {\r\n    return this.http.put(\r\n      environment.ApiUrl + `/${username}/update/${tweet.id}`,\r\n      tweet\r\n    );\r\n  }\r\n\r\n  replyTweet(tweetId: string, tweet: Tweet, username: string) {\r\n    return this.http.post(\r\n      environment.ApiUrl + `/${username}/reply/${tweetId}`,\r\n      tweet\r\n    );\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-dark bg-secondary navbar-expand-lg\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n      <img\r\n        src=\"/assets/twitter_circle-512.png\"\r\n        alt=\"\"\r\n        width=\"60\"\r\n        height=\"48\"\r\n        class=\"d-inline-block\"\r\n      />\r\n      Twitter\r\n    </a>\r\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" *ngIf=\"isLoggedIn()\" routerLink=\"/home\">Tweets</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" *ngIf=\"isLoggedIn()\" routerLink=\"/user-list\"\r\n          >Users</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" *ngIf=\"!isLoggedIn()\" routerLink=\"/register\"\r\n          >Register</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" *ngIf=\"isLoggedIn()\" (click)=\"logout()\"\r\n          >Logout</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" *ngIf=\"!isLoggedIn()\" routerLink=\"/login\"\r\n          >Login</a\r\n        >\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  isLoggedIn() {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return this.authService.getCurrentUser();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.setCurrentUser(null);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  Form,\r\n} from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { User } from '../interfaces/user';\r\nimport { Tweet } from '../interfaces/tweet';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { TweetService } from '../tweet.service';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-tweet-list',\r\n  templateUrl: './tweet-list.component.html',\r\n  styleUrls: ['./tweet-list.component.css'],\r\n})\r\nexport class TweetListComponent implements OnInit {\r\n  tweetForm: FormGroup;\r\n  loading: boolean = false;\r\n  submitted: boolean = false;\r\n  editSubmitted: boolean = false;\r\n  replySubmitted: boolean = false;\r\n  currentUser: User;\r\n  tweetList: Tweet[] = [];\r\n  replyTweetForm: FormGroup;\r\n  editTweetForm: FormGroup;\r\n  currentTweet: Tweet = {\r\n    id: null,\r\n    tweet: null,\r\n    postDate: null,\r\n    likes: 0,\r\n    user: null,\r\n    replies: null,\r\n    tweetTag: null,\r\n  };\r\n  addTagClicked: boolean = false;\r\n  currentRouteUsername: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private tweetService: TweetService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  addTag() {\r\n    this.addTagClicked = true;\r\n  }\r\n\r\n  removeTag() {\r\n    this.addTagClicked = false;\r\n  }\r\n\r\n  likeTweet(tweetId: string) {\r\n    this.tweetService\r\n      .likeTweet(tweetId, this.currentUser.username)\r\n      .subscribe((data: any) => {\r\n        this.refreshTweets();\r\n      });\r\n  }\r\n\r\n  deleteTweet(tweetId: string) {\r\n    this.tweetService\r\n      .deleteTweet(tweetId, this.currentUser.username)\r\n      .subscribe((data: any) => this.refreshTweets());\r\n  }\r\n\r\n  openEditTweetPopup(tweet: Tweet) {\r\n    this.currentTweet = tweet;\r\n    $('#editModal').modal('show');\r\n  }\r\n  openReplyTweetPopup(tweet: Tweet) {\r\n    this.currentTweet = tweet;\r\n    $('#replyModal').modal('show');\r\n  }\r\n\r\n  editTweetSubmit() {\r\n    this.editSubmitted = true;\r\n    this.currentTweet.tweet = this.editTweetForm.controls.tweetBody.value;\r\n    this.tweetService\r\n      .updateTweet(this.currentTweet, this.currentUser.username)\r\n      .subscribe((data: any) => {\r\n        this.refreshTweets();\r\n        this.currentTweet = {\r\n          id: null,\r\n          tweet: null,\r\n          postDate: null,\r\n          likes: 0,\r\n          user: null,\r\n          replies: null,\r\n          tweetTag: null,\r\n        };\r\n        $('#editModal').modal('hide');\r\n        this.addTagClicked = false;\r\n      });\r\n  }\r\n\r\n  replyTweetSubmit() {\r\n    this.replySubmitted = true;\r\n    let now = new Date();\r\n    let replyTweet: Tweet = {\r\n      id: null,\r\n      tweet: this.replyTweetForm.controls.tweetBody.value,\r\n      postDate: new Date(\r\n        now.getTime() - now.getTimezoneOffset() * 60000\r\n      ).toISOString(),\r\n      likes: null,\r\n      user: this.currentUser,\r\n      replies: null,\r\n      tweetTag: this.replyTweetForm.controls.tweetTag.value,\r\n    };\r\n    this.tweetService\r\n      .replyTweet(this.currentTweet.id, replyTweet, this.currentUser.username)\r\n      .subscribe((data: any) => {\r\n        this.refreshTweets();\r\n        this.currentTweet = {\r\n          id: null,\r\n          tweet: null,\r\n          postDate: null,\r\n          likes: 0,\r\n          user: null,\r\n          replies: null,\r\n          tweetTag: null,\r\n        };\r\n        $('#replyModal').modal('hide');\r\n        this.addTagClicked = false;\r\n      });\r\n  }\r\n\r\n  refreshTweets() {\r\n    this.tweetList.splice(0);\r\n    if (this.currentRouteUsername === null) {\r\n      this.tweetService.getAllTweets().subscribe((data: any) => {\r\n        this.tweetList.push(...data);\r\n      });\r\n    } else {\r\n      this.tweetService\r\n        .getAllTweetsByUsername(this.currentRouteUsername)\r\n        .subscribe((data: any) => {\r\n          this.tweetList.push(...data);\r\n        });\r\n    }\r\n    console.log(this.tweetList);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.loading = true;\r\n    let tweet: Tweet = {\r\n      id: null,\r\n      tweet: this.f.tweetBody.value,\r\n      postDate: null,\r\n      likes: 0,\r\n      user: null,\r\n      replies: [],\r\n      tweetTag: this.f.tweetTag.value,\r\n    };\r\n    this.tweetService.postTweet(tweet, this.currentUser.username).subscribe(\r\n      (data: any) => {\r\n        if (data.id !== undefined) {\r\n          this.refreshTweets();\r\n          console.log(this.tweetList);\r\n          this.addTagClicked = false;\r\n        }\r\n        this.loading = false;\r\n      },\r\n      (err) => {\r\n        this.loading = false;\r\n      }\r\n    );\r\n\r\n    console.log('x');\r\n  }\r\n  trackTweet(index: number, tweet: Tweet) {\r\n    return tweet.id;\r\n  }\r\n  ngOnInit(): void {\r\n    if (!this.authService.isLoggedIn()) {\r\n      this.router.navigateByUrl('login');\r\n    }\r\n    this.currentUser = this.authService.getCurrentUser();\r\n    this.tweetForm = this.formBuilder.group({\r\n      tweetBody: ['', [Validators.required, Validators.maxLength(144)]],\r\n      tweetTag: ['', Validators.maxLength(50)],\r\n    });\r\n    this.replyTweetForm = this.formBuilder.group({\r\n      tweetBody: ['', [Validators.required, Validators.maxLength(144)]],\r\n      tweetTag: ['', Validators.maxLength(50)],\r\n    });\r\n    this.editTweetForm = this.formBuilder.group({\r\n      tweetBody: ['', [Validators.required, Validators.maxLength(144)]],\r\n    });\r\n    this.currentRouteUsername = this.route.snapshot.paramMap.get('username');\r\n    if (this.currentRouteUsername === null) {\r\n      this.tweetService.getAllTweets().subscribe((data: any) => {\r\n        this.tweetList = data;\r\n      });\r\n    } else {\r\n      this.tweetService\r\n        .getAllTweetsByUsername(this.currentRouteUsername)\r\n        .subscribe((data: any) => {\r\n          this.tweetList = data;\r\n        });\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.tweetForm.controls;\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card mt-3\" >\r\n        <img\r\n          class=\"card-img-top\"\r\n          src=\"/assets/profile_pic.png\"\r\n          alt=\"Card image cap\"\r\n        />\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">@{{ currentUser.username }}</h5>\r\n          <p class=\"card-text\">\r\n            Welcome, {{ currentUser.firstName }} {{ currentUser.lastName }},\r\n            what do you want to do?\r\n          </p>\r\n        </div>\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li class=\"list-group-item\">\r\n            Contact Number: +91 {{ currentUser.contactNumber }}\r\n          </li>\r\n          <li class=\"list-group-item\">Email Id: {{ currentUser.email }}</li>\r\n        </ul>\r\n\r\n        <div class=\"card-body\">\r\n          <a [routerLink]=\"['/passwordReset', currentUser.username]\" class=\"card-link\">Reset Password</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <div class=\"row\">\r\n        <div class=\"card mb-2 mt-3 w-100\">\r\n          <h4 class=\"card-header\">Write something here..</h4>\r\n          <div class=\"card-body\">\r\n            <form [formGroup]=\"tweetForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group\">\r\n                <textarea\r\n                  formControlName=\"tweetBody\"\r\n                  class=\"form-control\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.tweetBody.errors }\"\r\n                ></textarea>\r\n                <div\r\n                  *ngIf=\"submitted && f.tweetBody.errors\"\r\n                  class=\"invalid-feedback\"\r\n                >\r\n                  <div *ngIf=\"f.tweetBody.errors.required\">\r\n                    Tweet text is required\r\n                  </div>\r\n                  <div *ngIf=\"f.tweetBody.errors.maxlength\">\r\n                    Tweet content cannot exceed 144 characters!\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button\r\n                  [disabled]=\"loading\"\r\n                  type=\"submit\"\r\n                  class=\"btn btn-secondary\"\r\n                >\r\n                  <span\r\n                    *ngIf=\"loading\"\r\n                    class=\"spinner-border spinner-border-sm mr-1\"\r\n                  ></span>\r\n                  Post\r\n                </button>\r\n                <span class=\"float-right\" *ngIf=\"!addTagClicked\">\r\n                  <button class=\"btn btn-primary\" (click)=\"addTag()\">\r\n                    Tag\r\n                  </button>\r\n                </span>\r\n                <span class=\"float-right\" *ngIf=\"addTagClicked\">\r\n                  <button\r\n                    class=\"btn btn-outline-danger btn-sm float-right ml-3\"\r\n                    (click)=\"removeTag()\"\r\n                  >\r\n                    X\r\n                  </button>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"tweetTag\"\r\n                    [ngClass]=\"{\r\n                      'is-invalid': submitted && f.tweetTag.errors\r\n                    }\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"row row-cols-1\"\r\n        *ngFor=\"let tweet of tweetList; trackBy: trackTweet\"\r\n      >\r\n        <div class=\"card w-100 h-100\">\r\n          <div class=\"row no-gutters\">\r\n            <div class=\"col-md-4\">\r\n              <img src=\"/assets/profile_pic.png\" [ngClass]=\"tweet.user.username == currentUser.username ?'card-img':'card-img grayscale'\" alt=\"...\" />\r\n            </div>\r\n            <div class=\"col-md-8\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">\r\n                  @{{ tweet.user.username }}\r\n                  <span\r\n                    class=\"float-right\"\r\n                    *ngIf=\"tweet.user.username == currentUser.username\"\r\n                  >\r\n                    <button\r\n                      class=\"btn btn-outline-dark ml-2\"\r\n                      (click)=\"openEditTweetPopup(tweet)\"\r\n                    >\r\n                      <i class=\"fa fa-edit\"></i></button\r\n                    ><button\r\n                      class=\"btn btn-outline-danger ml-2\"\r\n                      (click)=\"deleteTweet(tweet.id)\"\r\n                    >\r\n                      <i class=\"fa fa-trash\"></i></button\r\n                  ></span>\r\n                </h5>\r\n\r\n                <p class=\"card-text\">\r\n                  {{ tweet.tweet }}\r\n\r\n                  <small class=\"text-muted\" *ngIf=\"tweet.tweetTag != null\"\r\n                    >#{{ tweet.tweetTag }}</small\r\n                  >\r\n                </p>\r\n              </div>\r\n              <div class=\"card-footer mt-auto\">\r\n                <p class=\"card-text\">\r\n                  <small class=\"text-muted\">{{\r\n                    tweet.postDate | dateAgo\r\n                  }}</small>\r\n\r\n                  <span class=\"ml-3 float-right\">\r\n                    <button\r\n                      class=\"btn btn-outline-primary\"\r\n                      (click)=\"likeTweet(tweet.id)\"\r\n                    >\r\n                      <i class=\"fa fa-thumbs-up\"> {{ tweet.likes }} </i>\r\n                    </button>\r\n                    <button\r\n                      class=\"btn btn-outline-info ml-2\"\r\n                      (click)=\"openReplyTweetPopup(tweet)\"\r\n                    >\r\n                      <i class=\"fa fa-reply\"></i>\r\n                    </button>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"tweet.replies.length > 0\">\r\n          <div class=\"row w-100\" *ngFor=\"let replyTweet of tweet.replies\">\r\n            <div class=\"card mb-2 mt-2 w-75 ml-auto\">\r\n              <div class=\"row no-gutters\">\r\n                <div class=\"col-md-4\">\r\n                  <img \r\n                    src=\"/assets/profile_pic.png\"\r\n                    class=\"card-img grayscale\"\r\n                    alt=\"...\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-md-8\">\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">@{{ replyTweet.user.username }}</h5>\r\n\r\n                    <p class=\"card-text\">\r\n                      {{ replyTweet.tweet }}\r\n                      <small\r\n                        class=\"text-muted\"\r\n                        *ngIf=\"replyTweet.tweetTag != null\"\r\n                        >#{{ replyTweet.tweetTag }}</small\r\n                      >\r\n                    </p>\r\n                    <p class=\"card-text\">\r\n                      <small class=\"text-muted\">{{\r\n                        replyTweet.postDate | dateAgo\r\n                      }}</small>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"editModal\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Edit Tweet</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"></button>\r\n      </div>\r\n      <form [formGroup]=\"editTweetForm\" (ngSubmit)=\"editTweetSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <textarea\r\n            placeholder=\"{{ currentTweet.tweet }}\"\r\n            class=\"w-100\"\r\n            formControlName=\"tweetBody\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                editSubmitted && editTweetForm.controls.tweetBody.errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"replyModal\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Reply Tweet</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"></button>\r\n      </div>\r\n      <form [formGroup]=\"replyTweetForm\" (ngSubmit)=\"replyTweetSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <p>{{ currentTweet.tweet }}</p>\r\n          <textarea\r\n            placeholder=\"Your reply here...\"\r\n            class=\"w-100\"\r\n            formControlName=\"tweetBody\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                replySubmitted && replyTweetForm.controls.tweetBody.errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-secondary\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"removeTag()\"\r\n          >\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Reply</button>\r\n          <span class=\"float-right\" *ngIf=\"!addTagClicked\">\r\n            <button class=\"btn btn-primary\" (click)=\"addTag()\">Tag</button>\r\n          </span>\r\n          <span class=\"float-right\" *ngIf=\"addTagClicked\">\r\n            <button\r\n              class=\"btn btn-outline-danger btn-sm float-right ml-3\"\r\n              (click)=\"removeTag()\"\r\n            >\r\n              X\r\n            </button>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"tweetTag\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  replySubmitted && replyTweetForm.controls.tweetTag.errors\r\n              }\"\r\n            />\r\n          </span>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ResetPassComponent } from './reset/reset-pass/reset-pass.component';\r\nimport { TweetListComponent } from './tweet-list/tweet-list.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'home', component: TweetListComponent },\r\n  { path: 'user-list', component: UserListComponent },\r\n  { path: 'tweets/:username', component: TweetListComponent },\r\n  { path: 'passwordReset/:username', component: ResetPassComponent },\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { User } from '../interfaces/user';\r\nimport { Router } from '@angular/router';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n  loginForm: FormGroup;\r\n  submitted: boolean = false;\r\n  resetSubmitted: boolean = false;\r\n  loading: boolean = false;\r\n  currentUser: User;\r\n  invalid = false;\r\n  resetPasswordForm: FormGroup;\r\n  resetPasswordValue: string;\r\n  passwordResetComplete: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigateByUrl('home');\r\n    }\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      userName: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n\r\n    this.resetPasswordForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetPasswordSubmit() {\r\n    this.resetSubmitted = true;\r\n    this.authService\r\n      .forgotPassword(this.resetPasswordForm.controls.username.value)\r\n      .subscribe((data: any) => {\r\n        if (\r\n          (data.resetStatus !== undefined || data.resetStatus !== null) &&\r\n          data.resetStatus == 'success'\r\n        ) {\r\n          this.resetPasswordValue = data.newPassword;\r\n        }\r\n        this.passwordResetComplete = true;\r\n      });\r\n  }\r\n\r\n  showResetPasswordModal() {\r\n    this.resetSubmitted = false;\r\n    $('#resetPasswordModal').modal('show');\r\n  }\r\n\r\n  hideResetPasswordModal() {\r\n    this.resetSubmitted = false;\r\n    $('#resetPasswordModal').modal('hide');\r\n  }\r\n\r\n  getUsername() {\r\n    return this.loginForm.get('userName').value;\r\n  }\r\n\r\n  getPassword() {\r\n    return this.loginForm.get('password').value;\r\n  }\r\n\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log('Submitted');\r\n    this.submitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.authService\r\n      .login(this.getUsername(), this.getPassword())\r\n      .subscribe((data: any) => {\r\n        if (data.loginStatus == 'success') {\r\n          // this.currentUser = {\r\n          //   username: this.getUsername(),\r\n          //   id: null,\r\n          //   password: null,\r\n          //   email: null,\r\n          //   firstName: null,\r\n          //   lastName: null,\r\n          //  contactNumber: null,\r\n          this.currentUser = data.user;\r\n          console.log(this.currentUser);\r\n          this.authService.setCurrentUser(this.currentUser);\r\n          this.submitted = false;\r\n          this.router.navigateByUrl('home');\r\n        } else {\r\n          this.invalid = true;\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"col-md-4 offset-md-4 mt-5\">\r\n  <div class=\"card\">\r\n    <h4 class=\"card-header\">Login</h4>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"userName\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.userName.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.userName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.userName.errors.required\">Username is required</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"password\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"invalid\" class=\"mb-3 text-danger\">User does not exist!</div>\r\n        <div class=\"form-group\">\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span\r\n              *ngIf=\"loading\"\r\n              class=\"spinner-border spinner-border-sm mr-1\"\r\n            ></span>\r\n            Login\r\n          </button>\r\n          <a class=\"btn btn-secondary ml-3\" (click)=\"showResetPasswordModal()\"\r\n            >Forgot Password?</a\r\n          >\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"resetPasswordModal\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Reset Password</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"></button>\r\n      </div>\r\n      <div *ngIf=\"!passwordResetComplete\">\r\n        <form\r\n          [formGroup]=\"resetPasswordForm\"\r\n          (ngSubmit)=\"resetPasswordSubmit()\"\r\n        >\r\n          <div class=\"modal-body\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              class=\"w-100\"\r\n              formControlName=\"username\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  resetSubmitted && resetPasswordForm.controls.username.errors\r\n              }\"\r\n            />\r\n            <div\r\n              *ngIf=\"\r\n                resetSubmitted && resetPasswordForm.controls.username.errors\r\n              \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n              <div *ngIf=\"resetPasswordForm.controls.username.errors.required\">\r\n                Username is required\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n              (click)=\"hideResetPasswordModal()\"\r\n            >\r\n              Close\r\n            </button>\r\n            <button type=\"submit\" class=\"btn btn-primary\">\r\n              Reset Password\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div *ngIf=\"passwordResetComplete\">\r\n        <div\r\n          *ngIf=\"\r\n            resetPasswordValue !== null || resetPasswordValue !== undefined\r\n          \"\r\n        >\r\n          Password reset successfully. Please login with new password:\r\n          {{ resetPasswordValue }}\r\n        </div>\r\n        <div\r\n          *ngIf=\"\r\n            resetPasswordValue === null || resetPasswordValue === undefined\r\n          \"\r\n        >\r\n          Password could not be reset. Please try again and ensure you are\r\n          typing the correct username.\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-secondary\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"hideResetPasswordModal()\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}